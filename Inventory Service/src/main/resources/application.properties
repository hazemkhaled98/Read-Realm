spring.application.name=inventory-service

spring.datasource.url=jdbc:mysql://localhost:3306/inventory
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

server.port=8082

spring.docker.compose.file=Inventory Service\\docker-compose.yaml

spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v1/api-docs

docs.title=Inventory Service
docs.version=1.0

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=inventory-Service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://localhost:8085
spring.kafka.consumer.properties.specific.avro.reader=true


management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=${spring.application.name}
management.tracing.sampling.probability=1.0
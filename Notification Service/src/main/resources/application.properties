server.port=${SERVER_PORT:8088}

spring.application.name=${APP_NAME:notification-service}

# Mail Configuration
spring.mail.host=${SPRING_MAIL_HOST:sandbox.smtp.mailtrap.io}
spring.mail.port=${SPRING_MAIL_PORT:465}
spring.mail.username=${SPRING_MAIL_USERNAME:d8ed6775c8fbbe}
spring.mail.password=${SPRING_MAIL_PASSWORD:16370f0d8be252}
spring.mail.protocol=${SPRING_MAIL_PROTOCOL:smtp}
spring.mail.test-connection=${SPRING_MAIL_TEST_CONNECTION:true}
spring.mail.properties.mail.smtp.connectiontimeout=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_CONNECTIONTIMEOUT:5000}
spring.mail.properties.mail.smtp.timeout=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_TIMEOUT:5000}
spring.mail.properties.mail.smtp.writetimeout=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_WRITETIMEOUT:5000}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:PLAIN}
spring.mail.properties.mail.smtp.starttls=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS:Optional}
spring.mail.properties.mail.smtp.ssl.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE:true}
spring.mail.properties.mail.smtp.ssl.trust=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST:${spring.mail.host}}

spring.threads.virtual.enabled=${VIRTUAL_THREADS_ENABLED:true}

# Kafka Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID:notification-Service}
spring.kafka.consumer.key-deserializer=${SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
spring.kafka.consumer.value-deserializer=${SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER:org.springframework.kafka.support.serializer.ErrorHandlingDeserializer}
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_DESERIALIZER_KEY_DELEGATE_CLASS:org.apache.kafka.common.serialization.StringDeserializer}
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_DESERIALIZER_VALUE_DELEGATE_CLASS:io.confluent.kafka.serializers.KafkaAvroDeserializer}
spring.kafka.consumer.properties.schema.registry.url=${SPRING_KAFKA_CONSUMER_PROPERTIES_SCHEMA_REGISTRY_URL:http://localhost:8085}
spring.kafka.consumer.properties.specific.avro.reader=${SPRING_KAFKA_CONSUMER_PROPERTIES_SPECIFIC_AVRO_READER:true}

# Monitoring Configuration
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health, info, metrics, prometheus}
management.metrics.distribution.percentiles-histogram.http.server.requests=${MANAGEMENT_METRICS_DISTRIBUTION_PERCENTILES-HISTOGRAM_HTTP_SERVER_REQUESTS:true}
management.observations.key-values.application=${APP_NAME:notification-service}
management.tracing.sampling.probability=${MANAGEMENT_TRACING_SAMPLING_PROBABILITY:1.0}

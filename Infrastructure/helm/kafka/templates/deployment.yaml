apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kafka
  labels:
    app: {{ .Release.Name }}-kafka
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-kafka
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-kafka
        release: {{ .Release.Name }}
    spec:
      hostname: kafka
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap.name }}
          ports:
            {{- range .Values.service.ports }}
            - containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
              name: {{ .name }}
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka/data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-kafka-data